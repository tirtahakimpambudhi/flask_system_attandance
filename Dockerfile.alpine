FROM python:3.10.12-slim-bullseye AS build
LABEL org.opencontainers.image.source="https://github.com/tirtahakimpambudhi/flask_system_attandance"
LABEL org.opencontainers.image.description="Flask System Attandance Image"
LABEL org.opencontainers.image.licenses=MIT
# Make sure we use the virtualenv:
ENV PATH="/app/venv/bin:$PATH" \
    APP_ENV="" \
    APP_PORT=5000 \
    APP_HOST="" \
    APP_DEBUG=false \
    SECRET_KEY="" \
    SUPABASE_API_KEY="" \
    SUPABASE_URL="" \
    SUPABASE_TABLE="" \
    SUPABASE_CONNECTION_STRING="" \
    TIME_OUT_CALL_API=30000 \
    TIME_INTERVAL_CALL_API=1000 \
    UPLOAD_PATH="" \
    LOG_PATH=""

RUN apt-get update && \
    apt-get install -y --no-install-recommends build-essential gcc make cmake

WORKDIR /app
COPY . .
RUN make linux_venv
RUN CFLAGS="-march=x86-64 -mtune=generic" pip install --no-binary :all: numpy
RUN CFLAGS="-march=x86-64 -mtune=generic" pip install --upgrade pip
RUN CFLAGS="-march=x86-64 -mtune=generic" pip install wheel
COPY requirements.txt .
RUN CFLAGS="-march=x86-64 -mtune=generic" python3 -m pip install -r requirements.txt

# Menggunakan base image alpine linux yang ringan
FROM alpine:3.18 AS final

# Menambahkan informasi tentang image
LABEL org.opencontainers.image.source="https://github.com/tirtahakimpambudhi/flask_system_attandance"
LABEL org.opencontainers.image.description="Flask System Attandance Image"
LABEL org.opencontainers.image.licenses=MIT

# Mengupdate repositori dan menginstall python3, pip, dan alat pembangunan
RUN apk update && \
    apk add --no-install-recommends \
        build-base \
        cmake \
        make \
        libjpeg-turbo-dev \
        libx11-dev \
        libx11 \
        libffi-dev \
        linux-headers \
        bash \
        g++ \
        python3-dev \
        py3-pip

# Set CFLAGS untuk menghindari SSE 4.2 pada semua instalasi pip
ENV CFLAGS="-march=x86-64 -mtune=generic"

# Menginstall numpy tanpa binary dan memastikan semua pustaka lain mengikuti CFLAGS
RUN CFLAGS="-march=x86-64 -mtune=generic" pip install --no-binary :all: numpy

FROM build
ENV PATH=${PATH} \
    APP_ENV=${APP_ENV} \
    APP_PORT=${APP_PORT} \
    APP_HOST=${APP_HOST} \
    APP_DEBUG=${APP_DEBUG} \
    SECRET_KEY=${SECRET_KEY} \
    SUPABASE_API_KEY=${SUPABASE_API_KEY} \
    SUPABASE_URL=${SUPABASE_URL} \
    SUPABASE_TABLE=${SUPABASE_TABLE} \
    SUPABASE_CONNECTION_STRING=${SUPABASE_CONNECTION_STRING} \
    TIME_OUT_CALL_API=${TIME_OUT_CALL_API} \
    TIME_INTERVAL_CALL_API=${TIME_INTERVAL_CALL_API} \
    UPLOAD_PATH=${UPLOAD_PATH} \
    LOG_PATH=${LOG_PATH} 

# Menyiapkan direktori kerja
WORKDIR /app

# Menyalin file dari tahap build
COPY --from=build /app .

# Menentukan perintah yang dijalankan ketika container dimulai
CMD ["python3", "/app/app.py"]
